{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = environment.apiUrl;\n      this.customerUrl = this.baseUrl + 'Customer/';\n      this.productUrl = this.baseUrl + 'Product/';\n      this.saleUrl = this.baseUrl + 'Sale/';\n    } // Customer\n\n\n    getCustomerList() {\n      return this.http.get(this.customerUrl + 'getCustomerList');\n    }\n\n    saveCustomer(model) {\n      return this.http.post(this.customerUrl + 'saveCustomer', model);\n    }\n\n    updateCustomer(model) {\n      return this.http.put(this.customerUrl + 'updateCustomer', model);\n    }\n\n    deleteCustomer(id) {\n      return this.http.get(this.customerUrl + 'deleteCustomer?Id=' + id);\n    } // Product\n\n\n    getProductList() {\n      return this.http.get(this.productUrl + 'getProductList');\n    }\n\n    saveProduct(model) {\n      return this.http.post(this.productUrl + 'saveProduct', model);\n    }\n\n    updateProduct(model) {\n      return this.http.post(this.productUrl + 'updateProduct', model);\n    }\n\n    deleteProduct(id) {\n      return this.http.get(this.productUrl + 'deleteProduct?Id=' + id);\n    } // Sales\n\n\n    getSaleList() {\n      return this.http.get(this.saleUrl + 'getSaleList');\n    }\n\n    saveSale(model) {\n      return this.http.post(this.saleUrl + 'saveSale', model);\n    }\n\n    getSaleById(id) {\n      return this.http.get(this.saleUrl + 'getSaleById?Id=' + id);\n    }\n\n    deleteSale(id) {\n      return this.http.get(this.saleUrl + 'deleteSale?Id=' + id);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}