{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/loader.service\";\nexport let LoaderInterceptorService = /*#__PURE__*/(() => {\n  class LoaderInterceptorService {\n    constructor(loaderService) {\n      this.loaderService = loaderService;\n    }\n\n    intercept(req, next) {\n      this.showLoader();\n      return next.handle(req).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          this.onEnd();\n        }\n      }, err => {\n        this.onEnd();\n      }));\n    }\n\n    onEnd() {\n      this.hideLoader();\n    }\n\n    showLoader() {\n      this.loaderService.show();\n    }\n\n    hideLoader() {\n      this.loaderService.hide();\n    }\n\n  }\n\n  LoaderInterceptorService.ɵfac = function LoaderInterceptorService_Factory(t) {\n    return new (t || LoaderInterceptorService)(i0.ɵɵinject(i1.LoaderService));\n  };\n\n  LoaderInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoaderInterceptorService,\n    factory: LoaderInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoaderInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}